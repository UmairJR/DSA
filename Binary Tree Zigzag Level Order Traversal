class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        Queue<TreeNode> q= new LinkedList<>();
        boolean changeDir = true;
        if(root == null){
            return res;
        }
        q.add(root);
        while(!q.isEmpty()){
            List<Integer> level = new ArrayList<>();
            int n = q.size();
            for(int i = 0; i < n; i++){
                TreeNode curr = q.poll();
                //level.add(changeDir ? curr.val : 0, curr.val); normal direction, or reverse direction
                if(changeDir){
                    level.add(curr.val);
                }
                else{
                    level.add(0, curr.val);
                }
                if(curr.left != null){
                    q.add(curr.left);
                }
                if(curr.right != null){
                    q.add(curr.right);
                }

            }
            changeDir = !changeDir;
            res.add(level);
        }
        return res;
    }
}
