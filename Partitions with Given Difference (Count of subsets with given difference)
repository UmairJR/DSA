class Solution{

    public int countPartitions(int n, int d, int arr[]){
    //s1 = (diff + sum) / 2
    int mod = (int) 1e9+7;
    int sum = 0;
    for(int ele: arr){
        sum += ele;
    }
    int target = (d + sum)/2;
    int[][] dp;
    if((d + sum) % 2 != 0){
        return 0;
    }
    else{
        dp = new int[n+1][target+1];
        dp[0][0] = 1;
        for(int j = 1; j < target+1; j++) dp[0][j] = 0;
        
        for(int i = 1; i < n+1; i++){
            for(int j = 0; j < target+1; j++){
                if(arr[i-1] <= j){
                    dp[i][j] = (dp[i-1][j-arr[i-1]] + dp[i-1][j]) % mod;
                }
                else if(arr[i-1] > j){
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
    }
    return dp[n][target];
    }
}
