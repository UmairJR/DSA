class Solution {
    public int findTargetSumWays(int[] nums, int target) {
        int[][] dp;
        int n = nums.length;
        int totalSum = 0;
        for(int ele: nums){
            totalSum += ele;
        }
        int sum = (target + totalSum) / 2;
        if(sum < target) return 0;
        if((target + totalSum)<0 || ((target + totalSum) % 2) != 0){
            return 0;
        }
        else{
            dp = new int[n+1][sum+1];
            dp[0][0] = 1;
            for(int j = 1; j < sum + 1; j++) dp[0][j] = 0;

            for(int i = 1; i < n+1; i++){
                for(int j = 0; j < sum+1; j++){
                    if(nums[i-1] <= j){
                        dp[i][j] = dp[i-1][j-nums[i-1]] + dp[i-1][j];
                    }
                    else if(nums[i-1] > j){
                        dp[i][j] = dp[i-1][j];
                    }
                }
            }
        }
        return dp[n][sum];
    }
}
