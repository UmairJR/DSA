class Solution {
    public String minWindow(String s, String t) {
        HashMap<Character, Integer> map = new HashMap<>();
        int minLen = Integer.MAX_VALUE;
        
        int i = 0, j = 0;
        for (char ch : t.toCharArray()) {
            map.put(ch, map.getOrDefault(ch, 0) + 1);
        }
        int start = 0;
        int count = map.size();
        while(j < s.length()){
            char ch = s.charAt(j);
            if(map.containsKey(ch)){
                map.put(s.charAt(j),map.get(s.charAt(j))-1);
                if(map.get(s.charAt(j)) == 0){
                    count--;
                }
            }
            if(count == 0){
                while(count == 0){
                    
                    char ch1 = s.charAt(i);
                    if(map.containsKey(s.charAt(i))){
                        map.put(s.charAt(i),map.get(s.charAt(i))+1);
                        if(map.get(s.charAt(i)) > 0){
                            count++;
                            if(j-i+1 < minLen){
                                minLen = j - i + 1;
                                start = i;
                            }
                        }
                    }
                    i++;
                } 
            }
            j++;
        }
        
        return minLen == Integer.MAX_VALUE? "" : s.substring(start, start + minLen);
    }
}
