class GFG
{
    //Function to store the zig zag order traversal of tree in a list.
	ArrayList<Integer> zigZagTraversal(Node root)
	{
	   ArrayList<Integer> arr = new ArrayList<>();
	   Queue<Node> q = new LinkedList<>();
	   q.add(root);
	   boolean leftToRight = true;
	   while(q.size() > 0)
	   {
	       ArrayList<Integer> temp = new ArrayList<>();
	       int s = q.size();
	        
	       for(int i = 0; i < s; i++)
	       {
	           Node curr = q.poll();
	           temp.add(curr.data);
	           if(curr.left != null){
	               q.add(curr.left);
	           }
	           if(curr.right != null){
	               q.add(curr.right);
	           }
	       }
	       
	       if(!leftToRight){
	           Collections.reverse(temp);
	           arr.addAll(temp);
	       }
	       else{
	           arr.addAll(temp);
	       }
	       
	       leftToRight = !leftToRight;
    
	   }
	   return arr;
	}
}
