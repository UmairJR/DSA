class Solution{
    
    String longestPalindrome(String S){
        int n = S.length();
        int[][] dp = new int[n][n];
        int max = -1;
        int start = 0;
        
        for(int diff = 0; diff < n; diff++){
            for(int i = 0, j = i + diff; j < n; j++, i++){
                if(i == j){
                    dp[i][j] = 1;

                }
                else if(diff == 1){
                    if(S.charAt(i) == S.charAt(j)){
                        dp[i][j] = 2;
                    }
                    else{
                        dp[i][j] = 0;
                    }
                }
                else{
                    if(S.charAt(i) == S.charAt(j) && dp[i+1][j-1] > 0){
                        dp[i][j] = dp[i+1][j-1] + 2;
                    }
                }
                if(dp[i][j] > 0){
                    if(j-i+1 > max){
                        max = j-i+1;
                        start = i;
                    }
                }
            }
        }
        return S.substring(start,start + max);
    }
}
